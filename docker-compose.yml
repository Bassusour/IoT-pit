services:
  prometheus-exporter:
    build:
      context: .
      dockerfile: ./docker/prometheus/Dockerfile
    container_name: prometheus-exporter
    ports:
      - "127.0.0.1:9101:9101"
    volumes:
      - tarpit-sock:/tmp  # Shared volume for domain socket
      - ${PATH_TO_COUNTRY_MMDB}:/data/GeoLite2-Country.mmdb:ro
    environment:
      - GEO_DB=/data/GeoLite2-Country.mmdb

  telnet_pit:
    build:
      context: .
      dockerfile: ./docker/tarpits/Dockerfile
    ports:
      - ${TELNET_PORT}:${TELNET_PORT}
    volumes:
      - tarpit-sock:/tmp  # Share socket with prometheus-exporter
    ulimits:
      nofile:
        soft: "${TELNET_MAX_NO_CLIENTS}"
        hard: "${TELNET_MAX_NO_CLIENTS}"
    command: ["start", "telnet", "${TELNET_PORT}", "${TELNET_DELAY_MS}", "${TELNET_MAX_NO_CLIENTS}"]
    depends_on:
      - prometheus-exporter

  upnp_pit:
    build:
      context: .
      dockerfile: ./docker/tarpits/Dockerfile
    ports:
      - ${UPNP_SSDP_PORT}:${UPNP_SSDP_PORT}
      - ${UPNP_HTTP_PORT}:${UPNP_HTTP_PORT}
    volumes:
      - tarpit-sock:/tmp  # Share socket with prometheus-exporter
    ulimits:
      nofile:
        soft: "${UPNP_MAX_NO_CLIENTS}"
        hard: "${UPNP_MAX_NO_CLIENTS}"
    command: ["start", "upnp", "${UPNP_HTTP_PORT}", "${UPNP_SSDP_PORT}", "${UPNP_DELAY_MS}", "${UPNP_MAX_NO_CLIENTS}"]
    depends_on:
      - prometheus-exporter

  mqtt_pit:
    build:
      context: .
      dockerfile: ./docker/tarpits/Dockerfile
    ports:
      - ${MQTT_PORT}:${MQTT_PORT}
    volumes:
      - tarpit-sock:/tmp  # Share socket with prometheus-exporter
    ulimits:
      nofile:
        soft: "${MQTT_MAX_NO_CLIENTS}"
        hard: "${MQTT_MAX_NO_CLIENTS}"
    command: ["start", "mqtt", "${MQTT_PORT}", "${MQTT_MAX_EVENTS}", "${MQTT_EPOLL_TIMEOUT_INTERVAL_MS}", "${MQTT_PUBREL_INTERVAL_MS}", "${MQTT_MAX_PACKETS_PER_CLIENTS}", "${MQTT_MAX_NO_CLIENTS}"]
    depends_on:
      - prometheus-exporter

  coap_pit:
    build:
      context: .
      dockerfile: ./docker/tarpits/Dockerfile
    ports:
      - ${COAP_PORT}:${COAP_PORT}
    volumes:
      - tarpit-sock:/tmp  # Share socket with prometheus-exporter
    command: ["start", "coap", "${COAP_PORT}", "${COAP_DELAY_MS}", "${COAP_ACK_TIMEOUT_MS}", "${COAP_MAX_RETRANSMIT}", "${COAP_MAX_NO_CLIENTS}"]
    depends_on:
      - prometheus-exporter

  endlessh:
    build:
      context: ./endlessh
      # dockerfile: Dockerfile
    container_name: endlessh
    ports:
      - "2222:2222"

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - prometheus-exporter

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "127.0.0.1:3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/dashboards
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    environment:
    - GF_LOG_LEVEL=warn

volumes:
  grafana-storage:
  tarpit-sock:
